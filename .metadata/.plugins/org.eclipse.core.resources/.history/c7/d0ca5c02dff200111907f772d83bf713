package saveTheLolipop.moteurGraphique.donneesAffichage;

import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.Display;
import org.newdawn.slick.Color;
import org.newdawn.slick.opengl.Texture;

import saveTheLolipop.moteur.element.Actifs;
import saveTheLolipop.moteur.utilitaire.Coordonnees;
import saveTheLolipop.moteurGraphique.donneesAffichage.utilitaire.EnumDirection;
import saveTheLolipop.moteurGraphique.donneesAffichage.utilitaire.Formes;
import saveTheLolipop.moteurGraphique.donneesAffichage.utilitaire.ImageChargeur;

public class Affichages {
	private static Coordonnees lastCoord = new Coordonnees();
	private static Integer codeTextureAnimation = 90;
	
	public static void animationMarche(Actifs actif) {
		int code = actif.getApparence().code();
		Coordonnees coord = actif.getCoord();
		int codeTextureDirection = orientationVision(code, coord);
		if (lastCoord.distance(coord) == 0.0) {
			codeTextureAnimation = codeTextureDirection;
		} else {
			/*if (lastCoord.distance(coord) >= 20) {
				System.out.println("debut");
				System.out.println(codeTextureDirection);
				System.out.println((codeTextureAnimation - codeTextureDirection));
				Integer codeAnimation;
				if (codeTextureAnimation != 90) {
					codeAnimation = codeTextureAnimation - codeTextureDirection;
				} else {
					codeAnimation = 0;
				}
				codeTextureAnimation = (int) (codeTextureDirection + (codeAnimation % 3));
				System.out.println(codeTextureAnimation);
				lastCoord.vauxLaValeur(coord);
			}*/
		}

	 	Texture texture = ImageChargeur.getTexture(codeTextureAnimation);
		if (texture == null) {
			texture = ImageChargeur.getTexture(90);
		}
		Color.white.bind();
		texture.bind();
		Formes.rectangle(texture.getTextureWidth(), texture.getTextureHeight(),coord);
	}
	

	private static int orientationVision(int codeType, Coordonnees coord) {
		Float sourisCorrectionY = Display.getHeight() - (float) Mouse.getY();
		Coordonnees coordSouris = new Coordonnees((float) Mouse.getX(), sourisCorrectionY);
		
		EnumDirection directionVision = coord.comparePosition(coordSouris);
		int codeAffichage = 100 * codeType + 10 * directionVision.code();
		return codeAffichage;
	}
}
