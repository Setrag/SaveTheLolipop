package saveTheLolipop.moteurGraphique.donneesAffichage;

import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.Display;

import org.newdawn.slick.Color;
import org.newdawn.slick.Graphics;
import org.newdawn.slick.opengl.Texture;

import saveTheLolipop.moteur.elements.entités.Actifs;
import saveTheLolipop.moteur.utilitaire.Coordonnees;
import saveTheLolipop.utilitaire.EnumDirection;
import saveTheLolipop.moteurGraphique.donneesAffichage.utilitaire.Formes;
import saveTheLolipop.moteurGraphique.donneesAffichage.utilitaire.ImageChargeur;

public class Affichages {
	private static Coordonnees lastCoord = new Coordonnees();
	private static Integer codeTextureAnimation = 0;

	public static void animationMarche(int codeType, Coordonnees coord) {
		int codeTextureDirection = orientationVision(codeType, coord);
		if (lastCoord.distance(coord) >= 50) {
			codeTextureAnimation = (int) (codeTextureDirection + ((codeTextureAnimation - codeTextureDirection) % 2)) + 1;
			lastCoord.vauxLaValeur(coord);
		}
		Texture texture = ImageChargeur.getTexture(codeTextureAnimation);
		if (texture == null) {
			texture = ImageChargeur.getTexture(90);
		}
		Color.white.bind();
		texture.bind();
		Formes.rectangle(texture.getTextureWidth(), texture.getTextureHeight(),
				coord);
	}

	public static void Immobile(Actifs actif) {
		int code = actif.getType().code();
		Coordonnees coord = actif.getCoord();
		int codeTextureDirection = orientationVision(code, coord);
		Texture texture = ImageChargeur.getTexture(codeTextureDirection);
		if (texture == null) {
			texture = ImageChargeur.getTexture(90);
		}
		Color.white.bind();
		texture.bind();
		Graphics g = new Graphics(1, 1) ;
		g.drawImage(texture, coord.getX(), coord.getY());
		//Formes.rectangle(texture.getTextureWidth(), texture.getTextureHeight(),	coord);
	}

	public static void bouton(String messageBouton, Coordonnees coord, Integer largeur, Integer hauteur) {
		Float x = coord.getX();
		Float y = coord.getY();
		
		Color.white.bind();
		//Formes.rectangle(100, 100, coord);
		Graphics g = new Graphics(1, 1) ;
		g.setColor(Color.gray);
		g.fillRoundRect(x, y, largeur, hauteur, 5);
		g.setColor(Color.white);
		g.drawString(messageBouton, x + (largeur / 2) - messageBouton.length()*5, y );
	}
	
	public static void afficheString(String str, Coordonnees coord) {
		Float x = coord.getX();
		Float y = coord.getY();
		
		Graphics g = new Graphics(str.length() + 5, 10) ;
		g.drawString(str, x, y);
	}

	private static int orientationVision(int codeType, Coordonnees coord) {
		Float sourisCorrectionY = Display.getHeight() - (float) Mouse.getY();
		Coordonnees coordSouris = new Coordonnees((float) Mouse.getX(),
				sourisCorrectionY);

		EnumDirection directionVision = coord.comparePosition(coordSouris);
		int codeAffichage = 100 * codeType + 10 * directionVision.code();
		return codeAffichage;
	}

}
